@use "../../tools/ColorPallet.scss"as pallet;

.track-name-node-element {
  // width: 100%;
  display: flex;
  flex-grow: 1;
  max-width: calc(100% - 2em);
  justify-content: space-between;
}

.track-play-element {
  grid-area: play;

  //render svg of play button
  background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23ffffff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-play'><polygon points='5 3 19 12 5 21 5 3'></polygon></svg>") no-repeat;
  //set the size of the button

  //center the svg
  background-position: 50% 50%;
  //set the cursor
  cursor: pointer;
  height: 100%;

  aspect-ratio: 1/1;
  border-radius: 40%;

  background-color: pallet.$yin-color;


  transition: all 0.4s ease-in-out;
}

.track-play-element:hover {
  // background-color: black;

  filter: invert(100%);

}

.track-name-element {
  grid-area: name;

  display: inline;
  flex-grow: 1;
  flex-shrink: 1;
  justify-content: space-between;
  align-items: center;
  position: relative;
  overflow: hidden;
  width: 20em;
  height: 100%;

  white-space: nowrap;
  text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
  -moz-binding: url('ellipsis.xml#ellipsis');


  * {
    position: absolute;
    transition: 0.25s ease-in-out;
    transform-style: preserve-3d;

    width: auto;
  }

  .text {
    display: flex;
    flex-direction: row;
    height: 100%;
    gap: .25em;

    * {
      position: relative;
    }

    .artist {
      color: pallet.alpha(pallet.$yang-color, 0.75);
    }
  }

  .trackform {
    transform: rotateX(270deg) translateZ(0.75em);
  }

}

.track-name-element:hover {
  // background: pallet.alpha(pallet.$color-primary, 0.2) !important;
  color: pallet.$yang-color !important;

  .text {
    // move the text up
    transform: rotateX(90deg) translateZ(0.75em);
  }

  .trackform {
    // move the text up
    transform: rotateX(360deg) translateZ(0.75em);
  }
}


.track-row.dragging {
  background: pallet.$yang-color;
  color: pallet.$yin-color;
  width: 15em !important;
  padding: 0.5em;
  // center the text
  text-align: center;
  // make the text not selectable
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  // center vertically
  display: flex;
  align-items: center;

  // cut overflow text with ellipsis
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;

  // text should be cutted earlier than the end
  padding-right: 1em;

  transition: 0.1s ease-in-out;
}

.track-element.dragging.destination-nodes {
  background: pallet.alpha(pallet.$color-secondary, 0.5);
  color: pallet.$yang-color;
}

.dropping {
  background: pallet.alpha(pallet.$yang-color, 0.5) !important;
}